// Code generated by MockGen. DO NOT EDIT.
// Source: /home/huawei/Документы/golang/rtask/internal/repository/repository.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserRepository is a mock of UserRepository interface.
type MockUserRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserRepositoryMockRecorder
}

// MockUserRepositoryMockRecorder is the mock recorder for MockUserRepository.
type MockUserRepositoryMockRecorder struct {
	mock *MockUserRepository
}

// NewMockUserRepository creates a new mock instance.
func NewMockUserRepository(ctrl *gomock.Controller) *MockUserRepository {
	mock := &MockUserRepository{ctrl: ctrl}
	mock.recorder = &MockUserRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserRepository) EXPECT() *MockUserRepositoryMockRecorder {
	return m.recorder
}

// AddVal mocks base method.
func (m *MockUserRepository) AddVal(key, val string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddVal", key, val)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddVal indicates an expected call of AddVal.
func (mr *MockUserRepositoryMockRecorder) AddVal(key, val interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddVal", reflect.TypeOf((*MockUserRepository)(nil).AddVal), key, val)
}

// GetVal mocks base method.
func (m *MockUserRepository) GetVal(key string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVal", key)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVal indicates an expected call of GetVal.
func (mr *MockUserRepositoryMockRecorder) GetVal(key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVal", reflect.TypeOf((*MockUserRepository)(nil).GetVal), key)
}

// SetVal mocks base method.
func (m *MockUserRepository) SetVal(key, val string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetVal", key, val)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SetVal indicates an expected call of SetVal.
func (mr *MockUserRepositoryMockRecorder) SetVal(key, val interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetVal", reflect.TypeOf((*MockUserRepository)(nil).SetVal), key, val)
}
